{"version":3,"file":"script-489e746a.js","sources":["../../script.js"],"sourcesContent":["/* #TODO\nPedro made this smarter(Ai sayd: but it's still a bit too long.)\n*/\nWA.onInit().then(async () => {\n  function handleRoofVisibility(layerName) {\n    WA.room.area.onEnter(`roof_${layerName}`).subscribe(() => WA.room.hideLayer(`roofs/${layerName}`));\n    WA.room.area.onLeave(`roof_${layerName}`).subscribe(() => WA.room.showLayer(`roofs/${layerName}`));\n  }\n\n  const roofLayers = [\"lowerLeft\", \"lowerRight\", \"upperLeft\", \"upperRight\"];\n\n  roofLayers.forEach(layerName => handleRoofVisibility(layerName));\n});\n\n// Function to send player data to the webhook\nWA.onInit().then(async () => {\n  /* #TODO\n    This if statement adds unnecessary nesting.\n    It should be refactored into the oposite condition, with a return statement to stop the function execution\n    */\n  if (!WA.player.tags.includes(\"bot\")) {\n    /* #TODO\n    Declaring your function sendPlayerData inside of this IF statement, makes reading the code unnecessarily complicated.\n    It can be declared somewhere else and used in this context. Making the if statement's intentions more explicit.\n    By declaring this big function in this scope you're mixing your \"behaviour declaration\" with the control-flow logic without any real benefit.\n    */\n    async function sendPlayerData(\n      firstPing = false,\n\n      \n    ) {\n      const WEBHOOK_URL = \"https://apps.taskmagic.com/api/v1/webhooks/udowzdkJjQ2MJUNTpL1A0\";\n      /* #TODO\n        Try catch when used like this isn't an anti-pattern, but could be made cleaner with promise chaining.\n        (PROMISE.THEN(RES=>RES.JSON()).CATCH(E))\n        */\n      try {\n        /* #TODO\n        This code is already run inside of WA.onInit() on line 43.\n        In theory you shouldn't need to await or call WA.onInit() in here again.\n        */\n        await WA.onInit();\n        /* #TODO\n          could be cleaner with object desctructuring syntax\n          `const {id,name} = WA.player`\n          especially because you're using `const payload = {id,name,firstPing}`  , later\n         */\n        const playerId = WA.player.id;\n        const playerName = WA.player.name;\n        console.log(playerName); // or use the playerName variable elsewhere in your code\n\n        if (!playerId || !playerName) {\n          throw new Error(\"Invalid player data\");\n        }\n\n        // Create the payload\n        const payload = {\n          id: playerId,\n          name: playerName,\n          firstPing: firstPing,\n        };\n\n        /* #TODO\n        This function has no dependencies and is only a helper function\n        it doesn't HAVE to be declared inside of this scope / execution context\n        moving it outside, would make the code cleaner / more focused\n        */\n        // Function to handle fetch with timeout\n        const fetchWithTimeout = (url, options, timeout = 5000) => {\n          return Promise.race([\n            fetch(url, options),\n            new Promise((_, reject) =>\n              setTimeout(() => reject(new Error(\"Request timed out\")), timeout)\n            ),\n          ]);\n        };\n\n        // Send the payload to the webhook\n        const response = await fetchWithTimeout(WEBHOOK_URL, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(payload),\n        });\n\n        /* #TODO\n        This !response.ok and await response.json could be simpler,\n        if you used promise chaining as in (PROMISE.THEN(RES=>RES.JSON()).CATCH(E))\n        */\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log(\"Success:\", data);\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    }\n\n    /* #TODO\n    This firstPing parameter seems a little overly complicated. Is it really necessary?\n    Maybe this could be simpler. What are you trying to achieve\n    */\n    let firstPing = true;\n\n    /* #TODO\n    because the parameter is already named in the function true or false could be used directly in here.\n    */\n    // Call the function to send player data initially with firstPing=true\n    sendPlayerData(firstPing);\n\n    // Set firstPing to false after the initial call\n    firstPing = false;\n\n    // Call the function every 60 seconds with firstPing=false\n    setInterval(() => {\n      sendPlayerData(firstPing);\n    }, 60000);\n  }\n});\n////////////////////////////////////////////////\nWA.onInit().then(() => {\n  /* #TODO\n    Once again, same behaviour, different parameters (color and \"playerCategory\")\n    could be a reused function, to avoid code repetition.\n    */\n  if (WA.player.tags.includes(\"admin\")) {\n    WA.player.setOutlineColor(128, 0, 128); // Lila\n  } else if (WA.player.tags.includes(\"teacher\")) {\n    WA.player.setOutlineColor(0, 0, 255); // Blau\n  } else if (WA.player.tags.includes(\"masterclass\")) {\n    WA.player.setOutlineColor(255, 255, 0); // Gelb\n  }\n});\n\nWA.onInit().then(async () => {\n  // Check if the player has the \"admin\" tag\n  const playerName = WA.player.name;\n  const wokaurl = await WA.player.getWokaPicture();\n  /* #TODO\n  Unexpected use of var, use const or let instead.\n  Also, naming convention for variables should remain consistent and probably be camelCase.\n  */\n  var boturl = `https://chat.cocreation.world/cooliobot?playername=${encodeURIComponent(\n    playerName\n  )}&avatar=${encodeURIComponent(wokaurl)}`;\n  if (WA.player.tags.includes(\"admin\")) {\n    /* #TODO\n    Since only the latter part of the URL is changed,\n    you don't need to write it all over again in this if statement.\n    */\n    boturl = `https://chat.cocreation.world/cooliobot?playername=${encodeURIComponent(\n      playerName\n    )}&avatar=${encodeURIComponent(wokaurl)}&tag=admin`;\n  } ///if function stops here\n  // Get the player's name\n\n  /* #TODO\n  No need to initialize with = undefined.\n  `var coWebSite` already initializes it as undefined.\n  */\n  var coWebSite = undefined;\n  var shouldClose = false;\n  WA.room.area.onEnter(\"website\").subscribe(async () => {\n    coWebSite = await WA.nav.openCoWebSite(boturl);\n    if (shouldClose) {\n      coWebSite.close();\n      coWebSite = undefined;\n      shouldClose = false;\n    }\n  });\n\n  /* #TODO\n  Control-flow logic here with two variables (shouldClose & coWebSite) and two subscriptions\n  is very complicated. Probably could be simplified.\n  */\n  WA.room.area.onLeave(\"website\").subscribe(() => {\n    if (coWebSite !== undefined) {\n      coWebSite.close();\n      coWebSite = undefined;\n    } else {\n      shouldClose = true;\n    }\n  });\n});\n"],"names":["handleRoofVisibility","layerName","sendPlayerData","firstPing","WEBHOOK_URL","playerId","playerName","response","url","options","timeout","_","reject","data","error","wokaurl","boturl","coWebSite","shouldClose"],"mappings":"AAGA,GAAG,OAAM,EAAG,KAAK,SAAY,CAC3B,SAASA,EAAqBC,EAAW,CACvC,GAAG,KAAK,KAAK,QAAQ,QAAQA,CAAS,EAAE,EAAE,UAAU,IAAM,GAAG,KAAK,UAAU,SAASA,CAAS,EAAE,CAAC,EACjG,GAAG,KAAK,KAAK,QAAQ,QAAQA,CAAS,EAAE,EAAE,UAAU,IAAM,GAAG,KAAK,UAAU,SAASA,CAAS,EAAE,CAAC,CAClG,CAEkB,CAAC,YAAa,aAAc,YAAa,YAAY,EAE7D,QAAQA,GAAaD,EAAqBC,CAAS,CAAC,CACjE,CAAC,EAGD,GAAG,OAAM,EAAG,KAAK,SAAY,CAK3B,GAAI,CAAC,GAAG,OAAO,KAAK,SAAS,KAAK,EAAG,CAMnC,eAAeC,EACbC,EAAY,GAGZ,CACA,MAAMC,EAAc,mEAKpB,GAAI,CAKF,MAAM,GAAG,SAMT,MAAMC,EAAW,GAAG,OAAO,GACrBC,EAAa,GAAG,OAAO,KAG7B,GAFA,QAAQ,IAAIA,CAAU,EAElB,CAACD,GAAY,CAACC,EAChB,MAAM,IAAI,MAAM,qBAAqB,EA0BvC,MAAMC,EAAW,MAVQ,CAACC,EAAKC,EAASC,EAAU,MACzC,QAAQ,KAAK,CAClB,MAAMF,EAAKC,CAAO,EAClB,IAAI,QAAQ,CAACE,EAAGC,IACd,WAAW,IAAMA,EAAO,IAAI,MAAM,mBAAmB,CAAC,EAAGF,CAAO,CACjE,CACb,CAAW,GAIqCN,EAAa,CACnD,OAAQ,OACR,QAAS,CACP,eAAgB,kBACjB,EACD,KAAM,KAAK,UA3BG,CACd,GAAIC,EACJ,KAAMC,EACN,UAAWH,CACrB,CAuBsC,CACtC,CAAS,EAMD,GAAI,CAACI,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,MAAMM,EAAO,MAAMN,EAAS,OAC5B,QAAQ,IAAI,WAAYM,CAAI,CAC7B,OAAQC,EAAO,CACd,QAAQ,MAAM,SAAUA,CAAK,CAC9B,CACF,CAMD,IAAIX,EAAY,GAMhBD,EAAeC,CAAS,EAGxBA,EAAY,GAGZ,YAAY,IAAM,CAChBD,EAAeC,CAAS,CACzB,EAAE,GAAK,CACT,CACH,CAAC,EAED,GAAG,OAAM,EAAG,KAAK,IAAM,CAKjB,GAAG,OAAO,KAAK,SAAS,OAAO,EACjC,GAAG,OAAO,gBAAgB,IAAK,EAAG,GAAG,EAC5B,GAAG,OAAO,KAAK,SAAS,SAAS,EAC1C,GAAG,OAAO,gBAAgB,EAAG,EAAG,GAAG,EAC1B,GAAG,OAAO,KAAK,SAAS,aAAa,GAC9C,GAAG,OAAO,gBAAgB,IAAK,IAAK,CAAC,CAEzC,CAAC,EAED,GAAG,OAAM,EAAG,KAAK,SAAY,CAE3B,MAAMG,EAAa,GAAG,OAAO,KACvBS,EAAU,MAAM,GAAG,OAAO,eAAc,EAK9C,IAAIC,EAAS,sDAAsD,mBACjEV,CACD,CAAA,WAAW,mBAAmBS,CAAO,CAAC,GACnC,GAAG,OAAO,KAAK,SAAS,OAAO,IAKjCC,EAAS,sDAAsD,mBAC7DV,CACD,CAAA,WAAW,mBAAmBS,CAAO,CAAC,cAQzC,IAAIE,EAAY,OACZC,EAAc,GAClB,GAAG,KAAK,KAAK,QAAQ,SAAS,EAAE,UAAU,SAAY,CACpDD,EAAY,MAAM,GAAG,IAAI,cAAcD,CAAM,EACzCE,IACFD,EAAU,MAAK,EACfA,EAAY,OACZC,EAAc,GAEpB,CAAG,EAMD,GAAG,KAAK,KAAK,QAAQ,SAAS,EAAE,UAAU,IAAM,CAC1CD,IAAc,QAChBA,EAAU,MAAK,EACfA,EAAY,QAEZC,EAAc,EAEpB,CAAG,CACH,CAAC"}